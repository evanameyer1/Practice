v1 <- c(1,2,3,4,5)
v2 <- c(‘red’, ‘green’, ‘yellow’)
v2 <- c('red', 'green', 'yellow')
print(v1)
print(v2)
class(v1)
A = matrix( c(2, 4, 3, 1, 5, 7),
+   nrow=2,
+   ncol=3,
+   byrow = TRUE)
A = matrix( c(2, 4, 3, 1, 5, 7),
+   nrow=2,
+   ncol=3,
+   byrow = TRUE)
A = matrix(c(2, 4, 3, 1, 5, 7),
+   nrow=2,
+   ncol=3,
+   byrow = TRUE)
M<-matrix(1:9, nrow=3, ncol=3,byrow = T)
M
BMI <- 	data.frame(
gender = c("Male", "Male","Female"),
height = c(152, 171.5, 165),
weight = c(81,93, 78),
Age = c(42,38,26)
)
print(BMI)
list_1<-list(x=c(10,20,30),
y=c("a","b","c"),
z=c(TRUE,FALSE))
list_1
10>20 & 10<20
10>20 | 10<20
!(10 == 3)
squares <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
square(4)
squares(4)
if(is.integer(x)) {
print("X is an Integer")
}
x <- 30L
if(is.integer(x)) {
print("X is an Integer")
}
if (score > 80){
print("It is a good score!")
} else{
print("Its not a good score!")
}
score <- 63
if (score > 80){
print("It is a good score!")
} else{
print("Its not a good score!")
}
score <- 60
if (score > 80){
print("It is a good score!")
} else{
print("Its not a good score!")
}
fruit <- c('Apple', 'Orange', 'Passion fruit', 'Banana')
for ( i in fruit){
print(i)
}
v <- c("Hello","while loop")
count <- 2
while (cnt < 7) {
print(v)
count = count + 1
}
while (count < 7) {
print(v)
count = count + 1
}
v <- c("Hello World")
count <- 2
while (count < 7) {
print(v)
count = count + 1
}
# Simple function, no inputs!
hello_world <- function(){
print('hello World in R!')
}
hello_world()
x <- 25
print(x < 30 & x > 20)
print(x < 10 | x > 30)
# Problem 3
# Check if x is not equal to 25
!(x == 25)
hello_name <- function(name){
print(paste('hello ',name))
}
hello_name('John')
hello_name <- function(name){
print(paste('hello',name))
}
hello_name('John')
vector_sum <- function(v) {
return(sum(v))
}
print(vector_sum(c(1, 2, 3, 4, 5)))
factorial <- function(n) {
result <- 1
for (i in 1:n) {
result <- result * i
}
return(result)
}
print(factorial(5))
palindrome <- function(s) {
l <- length(s)
output <- (s[1:(l/2)] == s[(l/2):l:-1])
return(output)
}
print(palindrome('level'))
palindrome <- function(s) {
l <- length(s)
return(s[1:(l/2)] == s[(l/2):l:-1])
}
print(palindrome('level'))
palindrome <- function(s) {
l <- length(s)
return((s[1:(l/2)] == s[(l/2):l:-1]))
}
print(palindrome('level'))
palindrome <- function(s) {
l <- length(s)
return(s[1:(l/2)] == s[(l/2):l:-1])
}
print(palindrome('tennet'))
palindrome <- function(s) {
l <- length(s)
return(s[1:(l/2)] == s[(l/2):l:-1])
}
print(palindrome('tennet'))
palindrome <- function(s) {
l <- length(s)
return(s[1:(l/2)] == s[(l/2):l:-1])
}
print(palindrome('bus'))
palindrome <- function(s) {
l <- length(s)
print(s[1:(l/2)])
print(s[(l/2):l:-1])
return(s[1:(l/2)] == s[(l/2):l:-1])
}
print(palindrome('bus'))
palindrome <- function(s) {
l <- length(s)
return(substr(s, 1, (l/2)) == substr(s, (l/2), l, -1))
}
print(palindrome('bus'))
palindrome <- function(s) {
l <- length(s)
return(substr(s, 1, (l/2)) == substr(s, (l/2), l))
}
print(palindrome('bus'))
palindrome <- function(s) {
l <- length(s)
return(s == stri_reverse(s))
}
print(palindrome('bus'))
library(stringi)
palindrome <- function(s) {
l <- length(s)
return(s == stri_reverse(s))
}
print(palindrome('bus'))
library(stringi)
palindrome <- function(s) {
l <- length(s)
return(s == stri_reverse(s))
}
print(palindrome('bus'))
print(palindrome('level'))
print(palindrome('cram'))
performance <- function(score) {
if (score >= 90) {
return("Excellent")
} else if (score > 70) {
return("Good")
} else if (score > 50) {
return("Average")
} else {
return("Poor")
}
}
print(performance(85))
leap_year <- function(year) {
if (year %% 4 == 0) {
return(TRUE)
} else {
return(FALSE)
}
}
print(leap_year(2024))
HRA<-function(city)
{
hra_amt<-switch(toupper(city),
BLR=7500,
MUM=1000,
DEL=8000,
CHN=7500,
5000
)
return(hra_amt)
}
HRA("BLR")
HRA("PUNE")
HRA("blr")
num_to_day <- function(n) {
day <- switch(
n,
1 = 'Sunday',
num_to_day <- function(n) {
day <- switch(
n,
1='Sunday',
num_to_day <- function(n) {
day <- switch(
n,
'Sunday',
'Monday',
'Tuesday',
'Wednesday',
'Thursday',
'Friday',
'Saturday'
)
return(day)
}
print(num_to_day(1))
print(num_to_day(6))
print(num_to_day(3))
print(level(2))
ex_level <- function(ex_years) {
l <- switch(ex_years < 2 = "Entry Level",
ex_level <- function(ex_years) {
l <- switch(TRUE, ex_years < 2 = "Entry Level",
ex_level <- function(ex_years) {
l <- switch(TRUE, ex_years < 2, "Entry Level",
ex_years < 5, "Intermediate",
"Experienced")
return(l)
}
print(ex_level(2))
print(ex_level(3))
print(ex_level(8))
ex_level <- function(ex_years) {
l <- switch(ex_years, ex_years < 2, "Entry Level",
ex_years < 5, "Intermediate",
"Experienced")
return(l)
}
print(ex_level(2))
print(ex_level(3))
print(ex_level(8))
ex_level <- function(ex_years) {
l <- switch(ex_years, "Entry Level" = ex_years < 2,
ex_years < 5, "Intermediate",
"Experienced")
return(l)
}
print(ex_level(2))
print(ex_level(3))
print(ex_level(8))
ex_level <- function(ex_years) {
l <- switch(ex_years, "Entry Level" = ex_years < 2,
"Intermediate" = ex_years < 5,
"Experienced")
return(l)
}
print(ex_level(1))
print(ex_level(3))
print(ex_level(8))
ex_level <- function(ex_years) {
l <- switch(ex_years, ex_years < 2 = "Entry Level",
experience_level <- function(experience){
switch(TRUE,
experience < 2, "Entry Level",
experience < 5, "Intermediate",
TRUE, "Experienced")
}
experience_level(3)
experience_level <- function(experience){
switch(experience,
(experience < 2) = "Entry Level",
sqr<-function(n)
{
repeat
{
square=n*n
message("The square is ",square)
if(square>=100) break
n=n+1
}
return(n)
}
sqr(6)
